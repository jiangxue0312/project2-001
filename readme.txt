Participants:Ruoke Sun, 673433, ruokesXue Jiang, 665401, jiangx2Our group designed and implemented a 3D whack-a-mole in Unity. As is known to all, the game view of traditional 2D whack-a-mole is fixed. You know how many holes on the screen and your task is only to hit moles and get points.Our application involves some innovations. Firstly, it is a 3D game, the user would travel around the main world to find moles. This aspect is implemented by accelerometer. The user could use accelerometer to move camera positions and pinch to zoom in and out. For hitting the moles, we used ray cast to identify moles and the user should tap the screen where the moles were. Secondly, we used finger input instead of traditional hammers.Game logic: You have 100 seconds each game, if you hit a normal mole, you will get 10 points, you will see the increment of score on the top-left panel. If you hit an iced mole, you will get 10 points and 10 bonus seconds. A blue up-arrow pops up for a few seconds to clearly show the time increases.Interactions:One finger tap: hit a mole.Two fingers pinch: zoom in and outTap left & right button on screen: rotate around the main point (inside the mountain)Use accelerometer: change camera positionThe main terrain, trees and grass are painted by Xue. The rocks on the terrain were applied by bump mapping. For objects, I used one of the 3D pokemon model from “roestudios” website. Other “iced moles” were added fog shaders on normal moles to make them look like ice-covered surface. We also added shadow on the terrain, but it seems not working so well.We write scripts to control camera motion, camera would rotate and change position. These actions would help you move around the main terrain to find and hit moles. In our game, moles are small, it will take you some time to identify them.The moles movements are controlled by animator, we defined a state machine and several animations in order to make the movement of moles in a loop. When the moles pop up and dig down, we added triggers of colliders to activing the particle system of dust emission. Vedio link: https://www.youtube.com/watch?v=MUjyKw6ZrXk Git repository:https://github.com/jiangxue0312/project2-001/Reference[1]. Mole model: http://roestudios.co.uk/project/3d-pokemon-models/[2]. Camera zoominghttps://unity3d.com/learn/tutorials/topics/mobile-touch/pinch-zoom[3]. Game logichttps://github.com/xenonsin/Workshop-5---Whack-A-Hamtaro